{
  "swagger": "2.0",
  "info": {
    "title": "Azure AI",
    "version": "2024-07-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/agents/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{projectName}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "The Azure AI Foundry project endpoint, in the form `https://<azure-region>.api.azureml.ms` or `https://<private-link-guid>.<azure-region>.api.azureml.ms`, where <azure-region> is the Azure region where the project is deployed (e.g. westus) and <private-link-guid> is the GUID of the Enterprise private link.",
        "required": true,
        "type": "string"
      },
      {
        "name": "subscriptionId",
        "in": "path",
        "description": "The Azure subscription ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "resourceGroupName",
        "in": "path",
        "description": "The name of the Azure Resource Group.",
        "required": true,
        "type": "string"
      },
      {
        "name": "projectName",
        "in": "path",
        "description": "The Azure AI Foundry project name.",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://management.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://management.azure.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/": {
      "get": {
        "operationId": "GetWorkspace",
        "description": "Gets the properties of the specified machine learning workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GetWorkspaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/connections": {
      "get": {
        "operationId": "ListConnections",
        "description": "List the details of all the connections (not including their credentials)",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "category",
            "in": "query",
            "description": "Category of the workspace connection.",
            "required": false,
            "type": "string",
            "enum": [
              "AzureOpenAI",
              "Serverless",
              "AzureBlob",
              "AIServices",
              "CognitiveSearch"
            ],
            "x-ms-enum": {
              "name": "ConnectionType",
              "modelAsString": false,
              "values": [
                {
                  "name": "AzureOpenAI",
                  "value": "AzureOpenAI",
                  "description": "Azure OpenAI Service"
                },
                {
                  "name": "Serverless",
                  "value": "Serverless",
                  "description": "Serverless API Service"
                },
                {
                  "name": "AzureBlobStorage",
                  "value": "AzureBlob",
                  "description": "Azure Blob Storage"
                },
                {
                  "name": "AzureAIServices",
                  "value": "AIServices",
                  "description": "Azure AI Services"
                },
                {
                  "name": "AzureAISearch",
                  "value": "CognitiveSearch",
                  "description": "Azure AI Search"
                }
              ]
            }
          },
          {
            "name": "includeAll",
            "in": "query",
            "description": "Indicates whether to list datastores. Service default: do not list datastores.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "target",
            "in": "query",
            "description": "Target of the workspace connection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ListConnectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/connections/{connectionName}": {
      "get": {
        "operationId": "GetConnection",
        "description": "Get the details of a single connection, without credentials.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "Connection Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GetConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/connections/{connectionName}/listsecrets": {
      "post": {
        "operationId": "GetConnectionWithSecrets",
        "description": "Get the details of a single connection, including credentials (if available).",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "Connection Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ignored": {
                  "type": "string",
                  "description": "The body is ignored. TODO: Can we remove this?"
                }
              },
              "required": [
                "ignored"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GetConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AuthenticationType": {
      "type": "string",
      "description": "Authentication type used by Azure AI service to connect to another service",
      "enum": [
        "ApiKey",
        "AAD",
        "SAS",
        "None"
      ],
      "x-ms-enum": {
        "name": "AuthenticationType",
        "modelAsString": false,
        "values": [
          {
            "name": "apiKey",
            "value": "ApiKey",
            "description": "API Key authentication"
          },
          {
            "name": "entraId",
            "value": "AAD",
            "description": "Entra ID authentication (formerly known as AAD)"
          },
          {
            "name": "SAS",
            "value": "SAS",
            "description": "Shared Access Signature (SAS) authentication"
          },
          {
            "name": "None",
            "value": "None",
            "description": "No authentication"
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "ConnectionType": {
      "type": "string",
      "description": "The Type (or category) of the connection",
      "enum": [
        "AzureOpenAI",
        "Serverless",
        "AzureBlob",
        "AIServices",
        "CognitiveSearch"
      ],
      "x-ms-enum": {
        "name": "ConnectionType",
        "modelAsString": false,
        "values": [
          {
            "name": "AzureOpenAI",
            "value": "AzureOpenAI",
            "description": "Azure OpenAI Service"
          },
          {
            "name": "Serverless",
            "value": "Serverless",
            "description": "Serverless API Service"
          },
          {
            "name": "AzureBlobStorage",
            "value": "AzureBlob",
            "description": "Azure Blob Storage"
          },
          {
            "name": "AzureAIServices",
            "value": "AIServices",
            "description": "Azure AI Services"
          },
          {
            "name": "AzureAISearch",
            "value": "CognitiveSearch",
            "description": "Azure AI Search"
          }
        ]
      }
    },
    "CredentialsApiKeyAuth": {
      "type": "object",
      "description": "The credentials needed for API key authentication",
      "properties": {
        "key": {
          "type": "string",
          "description": "The API key"
        }
      },
      "required": [
        "key"
      ]
    },
    "CredentialsSASAuth": {
      "type": "object",
      "description": "The credentials needed for Shared Access Signatures (SAS) authentication",
      "properties": {
        "SAS": {
          "type": "string",
          "description": "The Shared Access Signatures (SAS) token"
        }
      },
      "required": [
        "SAS"
      ]
    },
    "GetConnectionResponse": {
      "type": "object",
      "description": "Response from the listSecrets operation",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier for the connection"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource"
        },
        "properties": {
          "$ref": "#/definitions/InternalConnectionProperties",
          "description": "The properties of the resource"
        }
      },
      "required": [
        "id",
        "name",
        "properties"
      ]
    },
    "GetWorkspaceResponse": {
      "type": "object",
      "description": "Response from the Workspace - Get operation",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier for the resource"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource"
        },
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The properties of the resource"
        }
      },
      "required": [
        "id",
        "name",
        "properties"
      ]
    },
    "InternalConnectionProperties": {
      "type": "object",
      "description": "Connection properties",
      "properties": {
        "authType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Authentication type of the connection target"
        },
        "category": {
          "$ref": "#/definitions/ConnectionType",
          "description": "Category of the connection"
        },
        "target": {
          "type": "string",
          "description": "The connection URL to be used for this service"
        }
      },
      "discriminator": "authType",
      "required": [
        "authType",
        "category",
        "target"
      ]
    },
    "InternalConnectionPropertiesAADAuth": {
      "type": "object",
      "description": "Connection properties for connections with AAD authentication (aka `Entra ID passthrough`)",
      "allOf": [
        {
          "$ref": "#/definitions/InternalConnectionProperties"
        }
      ],
      "x-ms-discriminator-value": "AAD"
    },
    "InternalConnectionPropertiesApiKeyAuth": {
      "type": "object",
      "description": "Connection properties for connections with API key authentication",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/CredentialsApiKeyAuth",
          "description": "Credentials will only be present for authType=ApiKey"
        }
      },
      "required": [
        "credentials"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InternalConnectionProperties"
        }
      ],
      "x-ms-discriminator-value": "ApiKey"
    },
    "InternalConnectionPropertiesNoAuth": {
      "type": "object",
      "description": "Connection properties for connections with no authentication",
      "allOf": [
        {
          "$ref": "#/definitions/InternalConnectionProperties"
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "InternalConnectionPropertiesSASAuth": {
      "type": "object",
      "description": "Connection properties for connections with SAS authentication",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/CredentialsSASAuth",
          "description": "Credentials will only be present for authType=ApiKey"
        }
      },
      "required": [
        "credentials"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InternalConnectionProperties"
        }
      ],
      "x-ms-discriminator-value": "SAS"
    },
    "ListConnectionsResponse": {
      "type": "object",
      "description": "Response from the list operation",
      "properties": {
        "value": {
          "type": "array",
          "description": "A list of connection list secrets",
          "items": {
            "$ref": "#/definitions/GetConnectionResponse"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "workspace properties",
      "properties": {
        "applicationInsights": {
          "type": "string",
          "description": "Authentication type of the connection target"
        }
      },
      "required": [
        "applicationInsights"
      ]
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
